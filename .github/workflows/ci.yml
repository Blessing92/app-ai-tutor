name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      PUBLIC_GEMINI_BASE_URL: ${{ secrets.PUBLIC_GEMINI_BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cypress install
        uses: cypress-io/github-action@v6
        with:
          runTests: false

      - name: Set up environment file
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "PUBLIC_GEMINI_BASE_URL=${{ secrets.PUBLIC_GEMINI_BASE_URL }}" >> .env

      - name: Run lints
        run: npm run lint

      - name: Build site
        run: npm run build

      - name: Upload build and .svelte-kit folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: |
            .vercel/output
            .svelte-kit

  test:
    needs: build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-22.13.1-chrome-133.0.6943.53-1-ff-135.0-edge-132.0.2957.140-1
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
        containers: [1, 2]
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      PUBLIC_GEMINI_BASE_URL: ${{ secrets.PUBLIC_GEMINI_BASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Set up environment file
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "PUBLIC_GEMINI_BASE_URL=${{ secrets.PUBLIC_GEMINI_BASE_URL }}" >> .env

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: python3 -m http.server --directory build 3000
          wait-on: http://localhost:3000/
          wait-on-timeout: 10
          browser: ${{ matrix.browser }}
          record: true
          parallel: true
          group: "UI - ${{ matrix.browser }}"
